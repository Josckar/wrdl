name: Server Test
on: [push, pull_request]

jobs:
  run-server-test:
    environment: env
    runs-on: ubuntu-latest
    
    env:
      MONGO_DB: ${{ secrets.MONGO_DB }}
      MONGO_URI: ${{ secrets.MONGO_URI }}
      PATH: /root/.local/bin/

    steps: 
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10" 
      - name: Install dependencies
        run: 
          sudo -E apt-get update 
          sudo -E apt-get install -y curl
          curl -sSL https://install.python-poetry.org | python3 -
          sudo -E poetry lock
          sudo -E poetry install --no-root --no-interaction --no-ansi
      - name: Ensure server runs
        run: |
          poetry run gunicorn -w 4 -b 0.0.0.0:5000 wsgi:app & sleep 5
          response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5000)
          if [ $response -eq 200 ]; then
            echo "Server is running"
          else
            echo "Server is not running, response code: $response"
            exit 1
          fi
          pkill gunicorn
      - name: Ensure Dockerfile builds properly
        run: |
          docker build -t flask-app .
          docker run -d -p 5000:5000 -e MONGO_DB=$MONGO_DB -e MONGO_URI=$MONGO_URI flask-app
          sleep 10
          response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5000)
          if [ $response -eq 200 ]; then
            echo "Server is running"
          else
            echo "Server is not running, response code: $response"
            exit 1
          fi
