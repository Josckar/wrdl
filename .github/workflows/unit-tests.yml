name: Run Pytest
on: [push, pull_request]

jobs:
  run-unit-tests:
    environment: env
    runs-on: ubuntu-latest
    
    env:
      MONGO_DB: ${{ secrets.MONGO_DB }}
      MONGO_URI: ${{ secrets.MONGO_URI }}

    steps: 
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10" 
      # - name: Install pytest
      #   run:
      #     pip install pytest pytest-flask pytest-mock
      - name: Install dependencies
        run: 
          pip install -r requirements.txt -r app/requirements.txt
      - name: Ensure server runs
        run: |
          gunicorn -w 4 -b 0.0.0.0:5000 wsgi:app & sleep 5
          response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5000)
          if [ $response -eq 200 ]; then
            echo "Server is running"
          else
            echo "Server is not running, response code: $response"
            exit 1
          fi
      - name: Ensure Dockerfile builds properly
        run: |
          docker build -t flask-app .
          docker run -d -p 5000:5000 flask-app
          response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5000)
          if [ $response -eq 200 ]; then
            echo "Server is running"
          else
            echo "Server is not running, response code: $response"
            exit 1
          fi
